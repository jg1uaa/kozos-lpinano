[Japanese]

● 概要

「12ステップで作る 組込みOS自作入門」（坂井弘亮著／カットシステム）で
H8/3069F向けに作られた組み込みOSであるKOZOS(http://kozos.jp/kozos/)を、
Lichee Pi nano (F1C100s, ARM926EJ-S)で動作するようにしてみました。

ただしOS本体のみの移植とし、ブートローダーはU-Bootを使用します。


● 開発環境

OpenBSD-6.3/amd64において、以下のパッケージを使用しました。

	gmake-4.2.1
	arm-none-eabi-binutils-2.27p0
	arm-none-eabi-gcc-linaro-6.3.2017.02p2
	arm-none-eabi-gdb-7.9.1p2
	arm-none-eabi-newlib-2.2.0.1p1

OpenBSD以外のPC-UNIXであっても、これらに類似したツールチェインを用意できれば
使用できるものと思われます。

U-Bootについては、Lichee Pi nanoのリポジトリ
(https://github.com/Lichee-Pi/u-boot)にあるnano-v2018.01ブランチのものを
使用しますが、これはloadxコマンドが使用できない状態になっています。
cmd/Kconfigのconfig CMD_LOADBのセクション（必要に応じconfig CMD_LOADSも）から
default n if ARCH_SUNXIを削除してビルドするようにしてください。

その他（シリアルコンソール用の通信ソフトやテキストエディタ等）については、
お好みのものを適宜用意してください。


● 構築方法

KOZOS自体は、gmakeで構築可能です。
kozos.elf, kozos, kozos.motが得られます。


● 実行方法

ストリップ済みのバイナリ(kozos)をLichee Pi nanoへ転送し、実行してください。
以下の例では、XMODEMでLichee Pi nanoへ転送し、実行しています。

※loadx, bootelfコマンドではアドレスを必ず指定するようにしてください

	No ethernet found.
	=> loadx 0x81000000
	## Ready for binary (xmodem) download to 0x81000000 at 115200 bps...
	C
	input sx_send_file name:kozos
	Sending kozos, 587 blocks: Give your local XMODEM receive command now.
	Bytes Sent:  75264   BPS:7414
	
	Transfer complete
	xyzModem - CRC mode, 588(SOH)/0(STX)/0(CAN) packets, 1 retries
	## Total Size      = 0x00012598 = 75160 Bytes
	=> bootelf 0x81000000
	CACHE: Misaligned operation at range [80500000, 80500038]
	CACHE: Misaligned operation at range [80500200, 80502208]
	CACHE: Misaligned operation at range [80502208, 80502254]
	CACHE: Misaligned operation at range [80502254, 80502333]
	CACHE: Misaligned operation at range [80502334, 80502360]
	CACHE: Misaligned operation at range [80502360, 80502678]
	## Starting application at 0x80500200 ...
	kozos boot succeed!
	command> echo hello
	 hello
	command>


● おまけ

オリジナルのKOZOSにない要素として、簡易モニタ(monitor.c, monitor.h)を
追加しています。例外発生時にモニタが起動するようになっているので、
何か問題が起こった際にメモリダンプを行う程度のことはできるはずです。

	Data Abort at 80501db0, sp=808c0068
	monitor> dw 808c0068
	808c0068: 200000d3 67686a6b 00000018 80501db8
	808c0078: 00000001 80502344 0000000c 00000000
	808c0088: 80502360 00000000 00000036 80502740
	808c0098: 00000000 00000000 0000000c 80500528
	monitor> dh
	808c00a8: 001f 0000 001f 0000 00c4 808c 052c 8050
	808c00b8: 0008 0000 23e4 8050 0000 0000 0000 0000
	808c00c8: 0000 0000 0000 0000 0000 0000 0000 0000
	808c00d8: 0000 0000 0000 0000 0000 0000 0528 8050
	monitor> db
	808c00e8: 00 00 00 00 00 00 00 00 00 00 00 00 f4 16 50 80
	808c00f8: 00 00 00 00 dc 16 50 80 00 00 00 00 00 00 00 00
	808c0108: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
	808c0118: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
	monitor>
	（表示は一部省略しています）

もう一つ、U-Bootを書き込んだLichee Pi nano起動用のSDカードを作成するための
補助として、makedisk.shを追加しています（これはOpenBSD専用です）。

以下のように使用してディスクイメージを作成し、

	# ./mkdisk.sh /path/to/u-boot-sunxi-with-spl.bin output.img

これをSDカードに書き込んで、起動ディスクとしてください。

	# dd if=output.img of=/dev/rsdNc bs=1M

（/dev/rsdNcは書き込み対象となるSDカードに対応するデバイスを指定します）
